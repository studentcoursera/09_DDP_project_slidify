getwd()
library(slidify)
library(knitr);
slidify('index.Rmd')
library(slidify)
library(knitr)
library(slidify)
library(knitr);
slidify('index.Rmd')
getwd()
proj_name <- "09_DDP_project_slidify"
library(slidify)
library(knitr)
author(proj_name)
slidify('index.Rmd')
publish(proj_name, 'studentcoursera', host = 'github') ## by default, it hosts on github
?publish
publish_github(proj_name, 'studentcoursera') ## by default, it hosts on github
getwd()
publish_github(proj_name, 'studentcoursera') ## by default, it hosts on github
publish_github(proj_name, 'studentcoursera') ## by default, it hosts on github
publish('https://github.com/studentcoursera/09_DDP_project_slidify', 'studentcoursera', host = 'github') ## by default, it hosts on github
publish_github(proj_name, 'studentcoursera') ## by default, it hosts on github
# Chunk 1: simple-plot
require(ggplot2)
qplot(wt, mpg, data=mtcars)
# Chunk 2: table
library(xtable)
options(xtable.type='html')
xtable(head(mtcars))
# Chunk 3
#require(googleVis)
suppressPackageStartupMessages(library(googleVis))
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
# Chunk 4
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart')
# Chunk 5
slidifyUI(
sidebarPanel(
selectInput('sex', 'Choose Sex', c('Male', 'Female')),
selectInput('type', 'Choose Type',
c('multiBarChart', 'multiBarHorizontalChart')
)
),
mainPanel(
tags$div(id = 'nvd3plot', class='shiny-html-output nvd3 rChart')
)
)
# Chunk 1: simple-plot
require(ggplot2)
qplot(wt, mpg, data=mtcars)
# Chunk 2: table
library(xtable)
options(xtable.type='html')
xtable(head(mtcars))
# Chunk 3
#require(googleVis)
suppressPackageStartupMessages(library(googleVis))
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
# Chunk 4
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart')
# Chunk 5
library(shiny)
slidifyUI(
sidebarPanel(
selectInput('sex', 'Choose Sex', c('Male', 'Female')),
selectInput('type', 'Choose Type',
c('multiBarChart', 'multiBarHorizontalChart')
)
),
mainPanel(
tags$div(id = 'nvd3plot', class='shiny-html-output nvd3 rChart')
)
)
# Chunk 1: simple-plot
require(ggplot2)
qplot(wt, mpg, data=mtcars)
# Chunk 2: table
library(xtable)
options(xtable.type='html')
xtable(head(mtcars))
# Chunk 3
#require(googleVis)
suppressPackageStartupMessages(library(googleVis))
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
# Chunk 4
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart')
slidify("index.Rmd")
slidify("index.Rmd")
library(slidify)
parse_body <- function(body){
html = ifelse(body != '', md2html(body), '')
pat = '^(<h([0-9])>([^\n]*)</h[0-9]>)?\n*(.*)$'
pat = regex(pat, dotall = TRUE, multiline = TRUE)
body = setNames(as.list(str_match(html, pat)),
c('html', 'header', 'level', 'title', 'content'))
# body = modifyList(body, parse_content(body$content))
# HACK: So that landslide h1's with no content are centered
if (body$content == "" | is.na(body$content)){
body$content = NULL
}
if (body$header == "" | is.na(body$header)){
body$header = NULL
}
return(body)
}
assignInNamespace("parse_body", parse_body, ns="slidify")
slidify("index.Rmd")
