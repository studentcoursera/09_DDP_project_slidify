xtable(head(mtcars))
# Chunk 3
#require(googleVis)
suppressPackageStartupMessages(library(googleVis))
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
# Chunk 4
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart')
# Chunk 5
library(shiny)
slidifyUI(
sidebarPanel(
selectInput('sex', 'Choose Sex', c('Male', 'Female')),
selectInput('type', 'Choose Type',
c('multiBarChart', 'multiBarHorizontalChart')
)
),
mainPanel(
tags$div(id = 'nvd3plot', class='shiny-html-output nvd3 rChart')
)
)
# Chunk 1: simple-plot
require(ggplot2)
qplot(wt, mpg, data=mtcars)
# Chunk 2: table
library(xtable)
options(xtable.type='html')
xtable(head(mtcars))
# Chunk 3
#require(googleVis)
suppressPackageStartupMessages(library(googleVis))
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
print(M1, tag = 'chart')
# Chunk 4
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart')
slidify("index.Rmd")
slidify("index.Rmd")
library(slidify)
parse_body <- function(body){
html = ifelse(body != '', md2html(body), '')
pat = '^(<h([0-9])>([^\n]*)</h[0-9]>)?\n*(.*)$'
pat = regex(pat, dotall = TRUE, multiline = TRUE)
body = setNames(as.list(str_match(html, pat)),
c('html', 'header', 'level', 'title', 'content'))
# body = modifyList(body, parse_content(body$content))
# HACK: So that landslide h1's with no content are centered
if (body$content == "" | is.na(body$content)){
body$content = NULL
}
if (body$header == "" | is.na(body$header)){
body$header = NULL
}
return(body)
}
assignInNamespace("parse_body", parse_body, ns="slidify")
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
library(wordcloud)
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(6, "Dark2")
col <- col[-(1)]
names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col)
bus
col
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
library(wordcloud)
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(6, "Dark2")
col <- col[-(1)]
names(bus)
wordcloud(bus[, 1], bus[, 2], min.freq = 1, random.order = F, colors = col)
?wordcloud
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col)
library(wordcloud)
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(6, "Dark2")
col <- col[-(1)]
names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col)
col <- brewer.pal(8, "Dark2")
library(wordcloud)
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(8, "Dark2")
names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col)
library(wordcloud)
file <- "/Users/ambikasam/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col, rot.per = 0.25)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col, rot.per = 0.35)
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col, rot.per = 0.35)
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = F, colors = col, rot.per = 0.35)
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
bus <- read.csv(file, header = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(bus[, 1], bus[, 3], min.freq = 1, random.order = T, colors = col, rot.per = 0.35)
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.csv"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(text[, 1], text[, 3], min.freq = 1, random.order = T,
max.words = 100, colors = col, rot.per = 0.35)
text
text <- readLines(file, encoding="UTF-8")
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(text[, 1], text[, 3], min.freq = 1, random.order = T,
max.words = 100, colors = col, rot.per = 0.35)
str(text)
head(text)
library(wordcloud)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
words = Corpus(VectorSource(text))
words = tm_map(words, content_transformer(tolower))
words = tm_map(words, removePunctuation)
words = tm_map(words, removeNumbers)
words = tm_map(words, removeWords,
c(stopwords("SMART"), "man", "men"))
termsMatrix = TermDocumentMatrix(words, control = list(minWordLength = 1))
m = as.matrix(termsMatrix)
terms <- sort(rowSums(m), decreasing = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(text[, 1], text[, 3], min.freq = 1, random.order = T,
max.words = 100, colors = col, rot.per = 0.35)
library(wordcloud)
library(tm)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
words = Corpus(VectorSource(text))
words = tm_map(words, content_transformer(tolower))
words = tm_map(words, removePunctuation)
words = tm_map(words, removeNumbers)
words = tm_map(words, removeWords,
c(stopwords("SMART"), "man", "men"))
termsMatrix = TermDocumentMatrix(words, control = list(minWordLength = 1))
m = as.matrix(termsMatrix)
terms <- sort(rowSums(m), decreasing = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(text[, 1], text[, 3], min.freq = 1, random.order = T,
max.words = 100, colors = col, rot.per = 0.35)
str(terms)
dim(terms)
library(wordcloud)
library(tm)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
words = Corpus(VectorSource(text))
words = tm_map(words, content_transformer(tolower))
words = tm_map(words, removePunctuation)
words = tm_map(words, removeNumbers)
words = tm_map(words, removeWords,
c(stopwords("SMART"), "man", "men"))
termsMatrix = TermDocumentMatrix(words, control = list(minWordLength = 1))
m = as.matrix(termsMatrix)
terms <- sort(rowSums(m), decreasing = TRUE)
col <- brewer.pal(8, "Dark2")
#names(bus)
wordcloud(names(terms), terms, min.freq = 1, random.order = T,
max.words = 100, colors = col, rot.per = 0.35)
library(wordcloud)
library(tm)
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
#text <- read.csv(file, header = TRUE)
text <- readLines(file, encoding="UTF-8")
words  <-  Corpus(VectorSource(text))
words  <-  tm_map(words, content_transformer(tolower))
words  <-  tm_map(words, removePunctuation)
words  <-  tm_map(words, removeNumbers)
words  <-  tm_map(words, removeWords,
c(stopwords("SMART"), "man", "men"))
termsMatrix <- TermDocumentMatrix(words, control = list(minWordLength = 1))
m <- as.matrix(termsMatrix)
terms <- sort(rowSums(m), decreasing = TRUE)
wordcloud(names(terms), terms, min.freq = 1, random.order = T,
max.words = 100, colors = brewer.pal(8, "Dark2"), rot.per = 0.35)
library(xtable)
library(xtable)
library(xtable)
library(xtable)
options(xtable.type='html')
xtable(head(terms))
library(xtable)
options(xtable.type='html')
words <- data.frame(cbind(terms[1:max,])
colnames(words) <- "freq"
xtable(head(t(words)))
str(words)
dim(words)
str(terms)
names(terms)
head(cbind(terms[1:max,])
)
head(cbind(terms[1:max]))
head(data.frame(cbind(terms[1:max,]))
)
head(names(terms))
head(terms)
head(t(terms)
)
t <- head(terms)
t(t)
t
library(xtable)
options(xtable.type='html')
#words <- data.frame(cbind(terms[1:max,])
#colnames(words) <- "freq"
xtable(head(terms))
head(terms)
words <- data.frame(cbind(head(terms)))
library(xtable)
options(xtable.type='html')
words <- data.frame(cbind(head(terms)))
colnames(words) <- "freq"
xtable(words)
library(xtable)
options(xtable.type='html')
words <- data.frame(cbind(head(terms, n=7)))
colnames(words) <- "freq"
xtable(words)
c(stopwords("SMART"), "man", "men"))
file <- "~/Coursera/CourseraCourses/JohnsHopkins-DataAnalysis-courseraCourse/09-DevelopingDataProducts/shiny/good_shiny_apps/word_cloud_gen/data/dummy.txt"
word_count <- function(text){
words  <-  Corpus(VectorSource(text))
words  <-  tm_map(words, content_transformer(tolower))
words  <-  tm_map(words, removePunctuation)
words  <-  tm_map(words, removeNumbers)
words  <-  tm_map(words, removeWords,
c(stopwords("SMART"), "man", "men"))
termsMatrix <- TermDocumentMatrix(words, control = list(minWordLength = 1))
m <- as.matrix(termsMatrix)
sort(rowSums(m), decreasing = TRUE)
}
library(wordcloud); library(tm)
terms <- word_count(readLines(file))
col <- brewer.pal(8, "Dark2")
wordcloud(names(terms), terms,
min.freq = 1, max.words = 100,
rot.per = 0.35, colors = col)
wordcloud(names(terms), terms, min.freq = 1,
random.order = F, max.words = 100,
colors = brewer.pal(8, "Dark2"),
rot.per = 0.35)
words
data.frame(words)
tmp <- head(terms, n=7)
tmp
data.frame(tmp)
library(xtable)
options(xtable.type='html')
freq <- head(terms, n=7)
#words <- data.frame(cbind(tmp))
#colnames(words) <- "freq"
xtable(freq)
freq
data.frame(freq)
data.frame(head(terms, n=7))
?data.frame
data.frame(head(terms, n=7),row.names = c("freq"))
?gvisMotionChart
?gvisMotionChart()
suppressPackageStartupMessages(library(googleVis))
?gvisMotionChart
head(terms)
head(cbind(names(terms),terms))
head(cbind(words=names(terms),freq=terms))
head(cbind(words=names(terms),freq=as.numeric(terms)))
head(data.frame(words=names(terms),freq=as.numeric(terms)))
head(data.frame(words=names(terms),freq=terms))
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(words ~ names(words), type = 'multiBarChart',
data = head(words, n=20)
)
n1$print('chart')
?nPlot
library(rCharts)
?nPlot
??nPlot
str(words)
library(rCharts)
#haireye = as.data.frame(HairEyeColor)
#n1 <- nPlot(freq ~ names(words), group = names(words), type = 'multiBarChart',
#  data = head(words, n=50)
n1 <- nPlot(~ freq, data = words, type = 'pieChart')
#n1$print('chart')
n1
library(rCharts)
#haireye = as.data.frame(HairEyeColor)
#n1 <- nPlot(freq ~ names(words), group = names(words), type = 'multiBarChart',
#  data = head(words, n=50)
n1 <- nPlot(~ names(words), data = words, type = 'pieChart')
#n1$print('chart')
n1
names(words)
names(t(words))
head(words)
head(row.names(words))
word_list <- row.names(words)
n1 <- nPlot(~ word_list, data = words, type = 'pieChart')
#n1$print('chart')
n1
word_list <- row.names(freq)
n1 <- nPlot(~ word_list, data = freq, type = 'pieChart')
#n1$print('chart')
n1
word_list <- row.names(words)
n1 <- nPlot(~ word_list, data = words, type = 'pieChart')
#n1$print('chart')
n1
n1 <- nPlot(freq ~ row.names(words), data = words, type = 'pieChart')
n1
n1 <- nPlot(freq ~ word_list, data = words, type = 'pieChart')
n1
n1 <- nPlot(~ word_list, data = words, type = 'pieChart')
n1
head(data.frame(row.names(words), word$freq))
head(data.frame(row.names(words), words$freq))
head(data.frame(wrds=row.names(words), freq=words$freq))
word_list <- data.frame(wrds=row.names(words), freq=words$freq)
dim(words)
words <- data.frame(terms)
freq <- head(words, n=7)
dim(words)
word_list <- data.frame(wrds=row.names(words), freq=words$freq)
head(words)
names(words)
words <- data.frame(freq=terms)
head(words)
names(words)
row.names(words)
words <- data.frame(freq=terms)
freq <- head(words, n=7)
word_list <- data.frame(wrds=row.names(words), freq=words$freq)
head(word_list)
tail(word_list)
word_list$wrds[substring(word_list$wrds, 1) == 'a']
word_list$wrds[substring(word_list$wrds, 1) == "a"]
tail(word_list$wrds[substring(word_list$wrds, 1) == "a"])
tail(word_list$wrds[substring(word_list$wrds, 1, 1) == "a"])
tail(word_list$wrds[substring(word_list$wrds, 1, 1) == "a"])
tail()
tail(substring(word_list$wrds, 1, 1))
head(substring(word_list$wrds, 1, 1))
tail(word_list$wrds[substring(word_list$wrds, 1, 1) == "a"])
tail(word_list$wrds[substring(word_list$wrds, 1, 1) == "b"])
?grep
grep("[a-e]",substring(word_list$wrds, 1, 1))
grep("[a-e]",substring(word_list$wrds, 1, 1), value=TRUE)
word_list[grep("[a-e]",substring(word_list$wrds, 1, 1)),]
head(word_list[grep("[a-e]",substring(word_list$wrds, 1, 1)),])
head(cbind(word_list[grep("[a-e]",substring(word_list$wrds, 1, 1)),],grp=1))
t1 <- cbind(word_list[grep("[a-e]",substring(word_list$wrds, 1, 1)),],grp=1)
t1 <- t1 + cbind(word_list[grep("[f-j]",substring(word_list$wrds, 1, 1)),],grp=2)
t1 <- rbind(t1, cbind(word_list[grep("[f-j]",substring(word_list$wrds, 1, 1)),],grp=2))
str(t1)
t1 <- rbind(t1, cbind(word_list[grep("[k-o]",substring(word_list$wrds, 1, 1)),],grp=3))
str(t1)
t1 <- rbind(t1, cbind(word_list[grep("[p-t]",substring(word_list$wrds, 1, 1)),],grp=4))
str(t1)
t1 <- rbind(t1, cbind(word_list[grep("[u-z]",substring(word_list$wrds, 1, 1)),],grp=5))
str(t1)
n1 <- nPlot(freq ~ wrds, group = grp, type = 'multiBarChart',
data = t1)
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = t1)
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(t1, n=30))
n1
sort(freq, decreasing = TRUE)
head(sort(t1$freq, decreasing = TRUE))
tail(sort(t1$freq, decreasing = TRUE))
head(t1[order(t1$freq, decreasing = TRUE),])
sorted_t1 <- t1[order(t1$freq, decreasing = TRUE),]
#n1 <- nPlot(~ word_list, data = t1, type = 'pieChart')
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=50))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=40))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'stackedAreaChart', id = 'chart',
data = head(sorted_t1, n=40))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'stackedAreaChart',
data = head(sorted_t1, n=40))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'stackedAreaChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'scatterChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarHorizontalChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'lineChart',
data = head(sorted_t1, n=30)); n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'stackedAreaChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ wrds, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=7))
n1
n1 <- nPlot(freq ~ grp, group = 'grp', type = 'multiBarChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=30))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=10))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'stackedAreaChart',
data = head(sorted_t1, n=10))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'stackedAreaChart', id = 'chart',
data = head(sorted_t1, n=10))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'stackedAreaChart', id = 'chart',
data = head(t1, n=10))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'stackedAreaChart', id = 'chart',
data = t1)
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=10))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=50))
n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=25)); n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=20)); n1
n1 <- nPlot(freq ~ grp, group = 'wrds', type = 'multiBarChart',
data = head(sorted_t1, n=7)); n1
t1[1:7,]
sorted_t1[1:7,]
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
publish(proj_name, 'studentcoursera', host = 'github')
proj_name <- "09_DDP_project_slidify"
proj_name <- "09_DDP_project_slidify"
library(slidify)
library(knitr)
slidify('index.Rmd')
#publish('slidify_test', 'ambikasam', host = 'github') ## by default, it hosts on github
publish(proj_name, 'studentcoursera', host = 'github') ## by default, it hosts on github
publish(proj_name, 'index.html', host = 'rpubs')
browseURL("index.html")
publish(proj_name, 'index.html', host = 'rpubs')
proj_name
proj_name <- "09_DDP_project_slidify"
library(slidify)
library(knitr)
slidify('index.Rmd')
#publish('slidify_test', 'ambikasam', host = 'github') ## by default, it hosts on github
publish(proj_name, 'studentcoursera', host = 'github') ## by default, it hosts on github
